{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, PLATFORM_ID, Directive, Inject, Input, Optional, Self, SecurityContext, NgModule } from '@angular/core';\nimport * as i1 from '@angular/flex-layout/core';\nimport { StyleBuilder, BaseDirective2, SERVER_TOKEN, LAYOUT_CONFIG, CoreModule } from '@angular/flex-layout/core';\nimport * as i2 from '@angular/common';\nimport { isPlatformServer, NgClass, NgStyle } from '@angular/common';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i2$1 from '@angular/platform-browser';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nclass ImgSrcStyleBuilder extends StyleBuilder {\n  buildStyles(url) {\n    return {\n      'content': url ? `url(${url})` : ''\n    };\n  }\n\n}\n\nImgSrcStyleBuilder.ɵfac = /* @__PURE__ */function () {\n  let ɵImgSrcStyleBuilder_BaseFactory;\n  return function ImgSrcStyleBuilder_Factory(t) {\n    return (ɵImgSrcStyleBuilder_BaseFactory || (ɵImgSrcStyleBuilder_BaseFactory = i0.ɵɵgetInheritedFactory(ImgSrcStyleBuilder)))(t || ImgSrcStyleBuilder);\n  };\n}();\n\nImgSrcStyleBuilder.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ImgSrcStyleBuilder,\n  factory: ImgSrcStyleBuilder.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ImgSrcStyleBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nclass ImgSrcDirective extends BaseDirective2 {\n  constructor(elementRef, styleBuilder, styler, marshal, platformId, serverModuleLoaded) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.platformId = platformId;\n    this.serverModuleLoaded = serverModuleLoaded;\n    this.DIRECTIVE_KEY = 'img-src';\n    this.defaultSrc = '';\n    this.styleCache = imgSrcCache;\n    this.init();\n    this.setValue(this.nativeElement.getAttribute('src') || '', '');\n\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.setAttribute('src', '');\n    }\n  }\n\n  set src(val) {\n    this.defaultSrc = val;\n    this.setValue(this.defaultSrc, '');\n  }\n  /**\n   * Use the [responsively] activated input value to update\n   * the host img src attribute or assign a default `img.src=''`\n   * if the src has not been defined.\n   *\n   * Do nothing to standard `<img src=\"\">` usages, only when responsive\n   * keys are present do we actually call `setAttribute()`\n   */\n\n\n  updateWithValue(value) {\n    const url = value || this.defaultSrc;\n\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.addStyles(url);\n    } else {\n      this.nativeElement.setAttribute('src', url);\n    }\n  }\n\n}\n\nImgSrcDirective.ɵfac = function ImgSrcDirective_Factory(t) {\n  return new (t || ImgSrcDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(ImgSrcStyleBuilder), i0.ɵɵdirectiveInject(i1.StyleUtils), i0.ɵɵdirectiveInject(i1.MediaMarshaller), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(SERVER_TOKEN));\n};\n\nImgSrcDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ImgSrcDirective,\n  inputs: {\n    src: \"src\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ImgSrcDirective, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: ImgSrcStyleBuilder\n    }, {\n      type: i1.StyleUtils\n    }, {\n      type: i1.MediaMarshaller\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [SERVER_TOKEN]\n      }]\n    }];\n  }, {\n    src: [{\n      type: Input,\n      args: ['src']\n    }]\n  });\n})();\n\nconst imgSrcCache = new Map();\nconst inputs$3 = ['src.xs', 'src.sm', 'src.md', 'src.lg', 'src.xl', 'src.lt-sm', 'src.lt-md', 'src.lt-lg', 'src.lt-xl', 'src.gt-xs', 'src.gt-sm', 'src.gt-md', 'src.gt-lg'];\nconst selector$3 = `\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n`;\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\n\nclass DefaultImgSrcDirective extends ImgSrcDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs$3;\n  }\n\n}\n\nDefaultImgSrcDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵDefaultImgSrcDirective_BaseFactory;\n  return function DefaultImgSrcDirective_Factory(t) {\n    return (ɵDefaultImgSrcDirective_BaseFactory || (ɵDefaultImgSrcDirective_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultImgSrcDirective)))(t || DefaultImgSrcDirective);\n  };\n}();\n\nDefaultImgSrcDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DefaultImgSrcDirective,\n  selectors: [[\"img\", \"src.xs\", \"\"], [\"img\", \"src.sm\", \"\"], [\"img\", \"src.md\", \"\"], [\"img\", \"src.lg\", \"\"], [\"img\", \"src.xl\", \"\"], [\"img\", \"src.lt-sm\", \"\"], [\"img\", \"src.lt-md\", \"\"], [\"img\", \"src.lt-lg\", \"\"], [\"img\", \"src.lt-xl\", \"\"], [\"img\", \"src.gt-xs\", \"\"], [\"img\", \"src.gt-sm\", \"\"], [\"img\", \"src.gt-md\", \"\"], [\"img\", \"src.gt-lg\", \"\"]],\n  inputs: {\n    \"src.xs\": \"src.xs\",\n    \"src.sm\": \"src.sm\",\n    \"src.md\": \"src.md\",\n    \"src.lg\": \"src.lg\",\n    \"src.xl\": \"src.xl\",\n    \"src.lt-sm\": \"src.lt-sm\",\n    \"src.lt-md\": \"src.lt-md\",\n    \"src.lt-lg\": \"src.lt-lg\",\n    \"src.lt-xl\": \"src.lt-xl\",\n    \"src.gt-xs\": \"src.gt-xs\",\n    \"src.gt-sm\": \"src.gt-sm\",\n    \"src.gt-md\": \"src.gt-md\",\n    \"src.gt-lg\": \"src.gt-lg\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultImgSrcDirective, [{\n    type: Directive,\n    args: [{\n      selector: selector$3,\n      inputs: inputs$3\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nclass ClassDirective extends BaseDirective2 {\n  constructor(elementRef, styler, marshal, iterableDiffers, keyValueDiffers, renderer2, ngClassInstance) {\n    super(elementRef, null, styler, marshal);\n    this.ngClassInstance = ngClassInstance;\n    this.DIRECTIVE_KEY = 'ngClass';\n\n    if (!this.ngClassInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n      // the same host element; since the responsive variations may be defined...\n      this.ngClassInstance = new NgClass(iterableDiffers, keyValueDiffers, elementRef, renderer2);\n    }\n\n    this.init();\n    this.setValue('', '');\n  }\n  /**\n   * Capture class assignments so we cache the default classes\n   * which are merged with activated styles and used as fallbacks.\n   */\n\n\n  set klass(val) {\n    this.ngClassInstance.klass = val;\n    this.setValue(val, '');\n  }\n\n  updateWithValue(value) {\n    this.ngClassInstance.ngClass = value;\n    this.ngClassInstance.ngDoCheck();\n  } // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n\n\n  ngDoCheck() {\n    this.ngClassInstance.ngDoCheck();\n  }\n\n}\n\nClassDirective.ɵfac = function ClassDirective_Factory(t) {\n  return new (t || ClassDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.StyleUtils), i0.ɵɵdirectiveInject(i1.MediaMarshaller), i0.ɵɵdirectiveInject(i0.IterableDiffers), i0.ɵɵdirectiveInject(i0.KeyValueDiffers), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i2.NgClass, 10));\n};\n\nClassDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ClassDirective,\n  inputs: {\n    klass: [\"class\", \"klass\"]\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ClassDirective, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.StyleUtils\n    }, {\n      type: i1.MediaMarshaller\n    }, {\n      type: i0.IterableDiffers\n    }, {\n      type: i0.KeyValueDiffers\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i2.NgClass,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }]\n    }];\n  }, {\n    klass: [{\n      type: Input,\n      args: ['class']\n    }]\n  });\n})();\n\nconst inputs$2 = ['ngClass', 'ngClass.xs', 'ngClass.sm', 'ngClass.md', 'ngClass.lg', 'ngClass.xl', 'ngClass.lt-sm', 'ngClass.lt-md', 'ngClass.lt-lg', 'ngClass.lt-xl', 'ngClass.gt-xs', 'ngClass.gt-sm', 'ngClass.gt-md', 'ngClass.gt-lg'];\nconst selector$2 = `\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n`;\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\n\nclass DefaultClassDirective extends ClassDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs$2;\n  }\n\n}\n\nDefaultClassDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵDefaultClassDirective_BaseFactory;\n  return function DefaultClassDirective_Factory(t) {\n    return (ɵDefaultClassDirective_BaseFactory || (ɵDefaultClassDirective_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultClassDirective)))(t || DefaultClassDirective);\n  };\n}();\n\nDefaultClassDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DefaultClassDirective,\n  selectors: [[\"\", \"ngClass\", \"\"], [\"\", \"ngClass.xs\", \"\"], [\"\", \"ngClass.sm\", \"\"], [\"\", \"ngClass.md\", \"\"], [\"\", \"ngClass.lg\", \"\"], [\"\", \"ngClass.xl\", \"\"], [\"\", \"ngClass.lt-sm\", \"\"], [\"\", \"ngClass.lt-md\", \"\"], [\"\", \"ngClass.lt-lg\", \"\"], [\"\", \"ngClass.lt-xl\", \"\"], [\"\", \"ngClass.gt-xs\", \"\"], [\"\", \"ngClass.gt-sm\", \"\"], [\"\", \"ngClass.gt-md\", \"\"], [\"\", \"ngClass.gt-lg\", \"\"]],\n  inputs: {\n    ngClass: \"ngClass\",\n    \"ngClass.xs\": \"ngClass.xs\",\n    \"ngClass.sm\": \"ngClass.sm\",\n    \"ngClass.md\": \"ngClass.md\",\n    \"ngClass.lg\": \"ngClass.lg\",\n    \"ngClass.xl\": \"ngClass.xl\",\n    \"ngClass.lt-sm\": \"ngClass.lt-sm\",\n    \"ngClass.lt-md\": \"ngClass.lt-md\",\n    \"ngClass.lt-lg\": \"ngClass.lt-lg\",\n    \"ngClass.lt-xl\": \"ngClass.lt-xl\",\n    \"ngClass.gt-xs\": \"ngClass.gt-xs\",\n    \"ngClass.gt-sm\": \"ngClass.gt-sm\",\n    \"ngClass.gt-md\": \"ngClass.gt-md\",\n    \"ngClass.gt-lg\": \"ngClass.gt-lg\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultClassDirective, [{\n    type: Directive,\n    args: [{\n      selector: selector$2,\n      inputs: inputs$2\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nclass ShowHideStyleBuilder extends StyleBuilder {\n  buildStyles(show, parent) {\n    const shouldShow = show === 'true';\n    return {\n      'display': shouldShow ? parent.display || (parent.isServer ? 'initial' : '') : 'none'\n    };\n  }\n\n}\n\nShowHideStyleBuilder.ɵfac = /* @__PURE__ */function () {\n  let ɵShowHideStyleBuilder_BaseFactory;\n  return function ShowHideStyleBuilder_Factory(t) {\n    return (ɵShowHideStyleBuilder_BaseFactory || (ɵShowHideStyleBuilder_BaseFactory = i0.ɵɵgetInheritedFactory(ShowHideStyleBuilder)))(t || ShowHideStyleBuilder);\n  };\n}();\n\nShowHideStyleBuilder.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ShowHideStyleBuilder,\n  factory: ShowHideStyleBuilder.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ShowHideStyleBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nclass ShowHideDirective extends BaseDirective2 {\n  constructor(elementRef, styleBuilder, styler, marshal, layoutConfig, platformId, serverModuleLoaded) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.layoutConfig = layoutConfig;\n    this.platformId = platformId;\n    this.serverModuleLoaded = serverModuleLoaded;\n    this.DIRECTIVE_KEY = 'show-hide';\n    /** Original DOM Element CSS display style */\n\n    this.display = '';\n    this.hasLayout = false;\n    this.hasFlexChild = false;\n  } // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n\n  ngAfterViewInit() {\n    this.trackExtraTriggers();\n    const children = Array.from(this.nativeElement.children);\n\n    for (let i = 0; i < children.length; i++) {\n      if (this.marshal.hasValue(children[i], 'flex')) {\n        this.hasFlexChild = true;\n        break;\n      }\n    }\n\n    if (DISPLAY_MAP.has(this.nativeElement)) {\n      this.display = DISPLAY_MAP.get(this.nativeElement);\n    } else {\n      this.display = this.getDisplayStyle();\n      DISPLAY_MAP.set(this.nativeElement, this.display);\n    }\n\n    this.init(); // set the default to show unless explicitly overridden\n\n    const defaultValue = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY, '');\n\n    if (defaultValue === undefined || defaultValue === '') {\n      this.setValue(true, '');\n    } else {\n      this.triggerUpdate();\n    }\n  }\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxShow')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n\n\n  ngOnChanges(changes) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const inputKey = key.split('.');\n        const bp = inputKey.slice(1).join('.');\n        const inputValue = changes[key].currentValue;\n        let shouldShow = inputValue !== '' ? inputValue !== 0 ? coerceBooleanProperty(inputValue) : false : true;\n\n        if (inputKey[0] === 'fxHide') {\n          shouldShow = !shouldShow;\n        }\n\n        this.setValue(shouldShow, bp);\n      }\n    });\n  } // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *  Watch for these extra triggers to update fxShow, fxHide stylings\n   */\n\n\n  trackExtraTriggers() {\n    this.hasLayout = this.marshal.hasValue(this.nativeElement, 'layout');\n    ['layout', 'layout-align'].forEach(key => {\n      this.marshal.trackValue(this.nativeElement, key).pipe(takeUntil(this.destroySubject)).subscribe(this.triggerUpdate.bind(this));\n    });\n  }\n  /**\n   * Override accessor to the current HTMLElement's `display` style\n   * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n   * unless it was already explicitly specified inline or in a CSS stylesheet.\n   */\n\n\n  getDisplayStyle() {\n    return this.hasLayout || this.hasFlexChild && this.layoutConfig.addFlexToParent ? 'flex' : this.styler.lookupStyle(this.nativeElement, 'display', true);\n  }\n  /** Validate the visibility value and then update the host's inline display style */\n\n\n  updateWithValue(value = true) {\n    if (value === '') {\n      return;\n    }\n\n    const isServer = isPlatformServer(this.platformId);\n    this.addStyles(value ? 'true' : 'false', {\n      display: this.display,\n      isServer\n    });\n\n    if (isServer && this.serverModuleLoaded) {\n      this.nativeElement.style.setProperty('display', '');\n    }\n\n    this.marshal.triggerUpdate(this.parentElement, 'layout-gap');\n  }\n\n}\n\nShowHideDirective.ɵfac = function ShowHideDirective_Factory(t) {\n  return new (t || ShowHideDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(ShowHideStyleBuilder), i0.ɵɵdirectiveInject(i1.StyleUtils), i0.ɵɵdirectiveInject(i1.MediaMarshaller), i0.ɵɵdirectiveInject(LAYOUT_CONFIG), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(SERVER_TOKEN));\n};\n\nShowHideDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ShowHideDirective,\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ShowHideDirective, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: ShowHideStyleBuilder\n    }, {\n      type: i1.StyleUtils\n    }, {\n      type: i1.MediaMarshaller\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LAYOUT_CONFIG]\n      }]\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [SERVER_TOKEN]\n      }]\n    }];\n  }, null);\n})();\n\nconst DISPLAY_MAP = new WeakMap();\nconst inputs$1 = ['fxShow', 'fxShow.print', 'fxShow.xs', 'fxShow.sm', 'fxShow.md', 'fxShow.lg', 'fxShow.xl', 'fxShow.lt-sm', 'fxShow.lt-md', 'fxShow.lt-lg', 'fxShow.lt-xl', 'fxShow.gt-xs', 'fxShow.gt-sm', 'fxShow.gt-md', 'fxShow.gt-lg', 'fxHide', 'fxHide.print', 'fxHide.xs', 'fxHide.sm', 'fxHide.md', 'fxHide.lg', 'fxHide.xl', 'fxHide.lt-sm', 'fxHide.lt-md', 'fxHide.lt-lg', 'fxHide.lt-xl', 'fxHide.gt-xs', 'fxHide.gt-sm', 'fxHide.gt-md', 'fxHide.gt-lg'];\nconst selector$1 = `\n  [fxShow], [fxShow.print],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide], [fxHide.print],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`;\n/**\n * 'show' Layout API directive\n */\n\nclass DefaultShowHideDirective extends ShowHideDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs$1;\n  }\n\n}\n\nDefaultShowHideDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵDefaultShowHideDirective_BaseFactory;\n  return function DefaultShowHideDirective_Factory(t) {\n    return (ɵDefaultShowHideDirective_BaseFactory || (ɵDefaultShowHideDirective_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultShowHideDirective)))(t || DefaultShowHideDirective);\n  };\n}();\n\nDefaultShowHideDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DefaultShowHideDirective,\n  selectors: [[\"\", \"fxShow\", \"\"], [\"\", \"fxShow.print\", \"\"], [\"\", \"fxShow.xs\", \"\"], [\"\", \"fxShow.sm\", \"\"], [\"\", \"fxShow.md\", \"\"], [\"\", \"fxShow.lg\", \"\"], [\"\", \"fxShow.xl\", \"\"], [\"\", \"fxShow.lt-sm\", \"\"], [\"\", \"fxShow.lt-md\", \"\"], [\"\", \"fxShow.lt-lg\", \"\"], [\"\", \"fxShow.lt-xl\", \"\"], [\"\", \"fxShow.gt-xs\", \"\"], [\"\", \"fxShow.gt-sm\", \"\"], [\"\", \"fxShow.gt-md\", \"\"], [\"\", \"fxShow.gt-lg\", \"\"], [\"\", \"fxHide\", \"\"], [\"\", \"fxHide.print\", \"\"], [\"\", \"fxHide.xs\", \"\"], [\"\", \"fxHide.sm\", \"\"], [\"\", \"fxHide.md\", \"\"], [\"\", \"fxHide.lg\", \"\"], [\"\", \"fxHide.xl\", \"\"], [\"\", \"fxHide.lt-sm\", \"\"], [\"\", \"fxHide.lt-md\", \"\"], [\"\", \"fxHide.lt-lg\", \"\"], [\"\", \"fxHide.lt-xl\", \"\"], [\"\", \"fxHide.gt-xs\", \"\"], [\"\", \"fxHide.gt-sm\", \"\"], [\"\", \"fxHide.gt-md\", \"\"], [\"\", \"fxHide.gt-lg\", \"\"]],\n  inputs: {\n    fxShow: \"fxShow\",\n    \"fxShow.print\": \"fxShow.print\",\n    \"fxShow.xs\": \"fxShow.xs\",\n    \"fxShow.sm\": \"fxShow.sm\",\n    \"fxShow.md\": \"fxShow.md\",\n    \"fxShow.lg\": \"fxShow.lg\",\n    \"fxShow.xl\": \"fxShow.xl\",\n    \"fxShow.lt-sm\": \"fxShow.lt-sm\",\n    \"fxShow.lt-md\": \"fxShow.lt-md\",\n    \"fxShow.lt-lg\": \"fxShow.lt-lg\",\n    \"fxShow.lt-xl\": \"fxShow.lt-xl\",\n    \"fxShow.gt-xs\": \"fxShow.gt-xs\",\n    \"fxShow.gt-sm\": \"fxShow.gt-sm\",\n    \"fxShow.gt-md\": \"fxShow.gt-md\",\n    \"fxShow.gt-lg\": \"fxShow.gt-lg\",\n    fxHide: \"fxHide\",\n    \"fxHide.print\": \"fxHide.print\",\n    \"fxHide.xs\": \"fxHide.xs\",\n    \"fxHide.sm\": \"fxHide.sm\",\n    \"fxHide.md\": \"fxHide.md\",\n    \"fxHide.lg\": \"fxHide.lg\",\n    \"fxHide.xl\": \"fxHide.xl\",\n    \"fxHide.lt-sm\": \"fxHide.lt-sm\",\n    \"fxHide.lt-md\": \"fxHide.lt-md\",\n    \"fxHide.lt-lg\": \"fxHide.lt-lg\",\n    \"fxHide.lt-xl\": \"fxHide.lt-xl\",\n    \"fxHide.gt-xs\": \"fxHide.gt-xs\",\n    \"fxHide.gt-sm\": \"fxHide.gt-sm\",\n    \"fxHide.gt-md\": \"fxHide.gt-md\",\n    \"fxHide.gt-lg\": \"fxHide.gt-lg\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultShowHideDirective, [{\n    type: Directive,\n    args: [{\n      selector: selector$1,\n      inputs: inputs$1\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** NgStyle allowed inputs */\n\n\nclass NgStyleKeyValue {\n  constructor(key, value, noQuotes = true) {\n    this.key = key;\n    this.value = value;\n    this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n    this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n    this.value = this.value.replace(/;/, '');\n  }\n\n}\n\nfunction getType(target) {\n  let what = typeof target;\n\n  if (what === 'object') {\n    return target.constructor === Array ? 'array' : target.constructor === Set ? 'set' : 'object';\n  }\n\n  return what;\n}\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\n\n\nfunction buildRawList(source, delimiter = ';') {\n  return String(source).trim().split(delimiter).map(val => val.trim()).filter(val => val !== '');\n}\n/** Convert array of key:value strings to a iterable map object */\n\n\nfunction buildMapFromList$1(styles, sanitize) {\n  const sanitizeValue = it => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n\n    return it;\n  };\n\n  return styles.map(stringToKeyValue).filter(entry => !!entry).map(sanitizeValue).reduce(keyValuesToMap, {});\n}\n/** Convert Set<string> or raw Object to an iterable NgStyleMap */\n\n\nfunction buildMapFromSet(source, sanitize) {\n  let list = [];\n\n  if (getType(source) === 'set') {\n    source.forEach(entry => list.push(entry));\n  } else {\n    Object.keys(source).forEach(key => {\n      list.push(`${key}:${source[key]}`);\n    });\n  }\n\n  return buildMapFromList$1(list, sanitize);\n}\n/** Convert 'key:value' -> [key, value] */\n\n\nfunction stringToKeyValue(it) {\n  const [key, ...vals] = it.split(':');\n  return new NgStyleKeyValue(key, vals.join(':'));\n}\n/** Convert [ [key,value] ] -> { key : value } */\n\n\nfunction keyValuesToMap(map, entry) {\n  if (!!entry.key) {\n    map[entry.key] = entry.value;\n  }\n\n  return map;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nclass StyleDirective extends BaseDirective2 {\n  constructor(elementRef, styler, marshal, sanitizer, differs, renderer2, ngStyleInstance, serverLoaded, platformId) {\n    super(elementRef, null, styler, marshal);\n    this.sanitizer = sanitizer;\n    this.ngStyleInstance = ngStyleInstance;\n    this.DIRECTIVE_KEY = 'ngStyle';\n\n    if (!this.ngStyleInstance) {\n      // Create an instance NgStyle Directive instance only if `ngStyle=\"\"` has NOT been\n      // defined on the same host element; since the responsive variations may be defined...\n      this.ngStyleInstance = new NgStyle(elementRef, differs, renderer2);\n    }\n\n    this.init();\n    const styles = this.nativeElement.getAttribute('style') ?? '';\n    this.fallbackStyles = this.buildStyleMap(styles);\n    this.isServer = serverLoaded && isPlatformServer(platformId);\n  }\n  /** Add generated styles */\n\n\n  updateWithValue(value) {\n    const styles = this.buildStyleMap(value);\n    this.ngStyleInstance.ngStyle = { ...this.fallbackStyles,\n      ...styles\n    };\n\n    if (this.isServer) {\n      this.applyStyleToElement(styles);\n    }\n\n    this.ngStyleInstance.ngDoCheck();\n  }\n  /** Remove generated styles */\n\n\n  clearStyles() {\n    this.ngStyleInstance.ngStyle = this.fallbackStyles;\n    this.ngStyleInstance.ngDoCheck();\n  }\n  /**\n   * Convert raw strings to ngStyleMap; which is required by ngStyle\n   * NOTE: Raw string key-value pairs MUST be delimited by `;`\n   *       Comma-delimiters are not supported due to complexities of\n   *       possible style values such as `rgba(x,x,x,x)` and others\n   */\n\n\n  buildStyleMap(styles) {\n    // Always safe-guard (aka sanitize) style property values\n    const sanitizer = val => this.sanitizer.sanitize(SecurityContext.STYLE, val) ?? '';\n\n    if (styles) {\n      switch (getType(styles)) {\n        case 'string':\n          return buildMapFromList(buildRawList(styles), sanitizer);\n\n        case 'array':\n          return buildMapFromList(styles, sanitizer);\n\n        case 'set':\n          return buildMapFromSet(styles, sanitizer);\n\n        default:\n          return buildMapFromSet(styles, sanitizer);\n      }\n    }\n\n    return {};\n  } // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /** For ChangeDetectionStrategy.onPush and ngOnChanges() updates */\n\n\n  ngDoCheck() {\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n}\n\nStyleDirective.ɵfac = function StyleDirective_Factory(t) {\n  return new (t || StyleDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.StyleUtils), i0.ɵɵdirectiveInject(i1.MediaMarshaller), i0.ɵɵdirectiveInject(i2$1.DomSanitizer), i0.ɵɵdirectiveInject(i0.KeyValueDiffers), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i2.NgStyle, 10), i0.ɵɵdirectiveInject(SERVER_TOKEN), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nStyleDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: StyleDirective,\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StyleDirective, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.StyleUtils\n    }, {\n      type: i1.MediaMarshaller\n    }, {\n      type: i2$1.DomSanitizer\n    }, {\n      type: i0.KeyValueDiffers\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i2.NgStyle,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [SERVER_TOKEN]\n      }]\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, null);\n})();\n\nconst inputs = ['ngStyle', 'ngStyle.xs', 'ngStyle.sm', 'ngStyle.md', 'ngStyle.lg', 'ngStyle.xl', 'ngStyle.lt-sm', 'ngStyle.lt-md', 'ngStyle.lt-lg', 'ngStyle.lt-xl', 'ngStyle.gt-xs', 'ngStyle.gt-sm', 'ngStyle.gt-md', 'ngStyle.gt-lg'];\nconst selector = `\n  [ngStyle],\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n`;\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\n\nclass DefaultStyleDirective extends StyleDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs;\n  }\n\n}\n\nDefaultStyleDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵDefaultStyleDirective_BaseFactory;\n  return function DefaultStyleDirective_Factory(t) {\n    return (ɵDefaultStyleDirective_BaseFactory || (ɵDefaultStyleDirective_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultStyleDirective)))(t || DefaultStyleDirective);\n  };\n}();\n\nDefaultStyleDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DefaultStyleDirective,\n  selectors: [[\"\", \"ngStyle\", \"\"], [\"\", \"ngStyle.xs\", \"\"], [\"\", \"ngStyle.sm\", \"\"], [\"\", \"ngStyle.md\", \"\"], [\"\", \"ngStyle.lg\", \"\"], [\"\", \"ngStyle.xl\", \"\"], [\"\", \"ngStyle.lt-sm\", \"\"], [\"\", \"ngStyle.lt-md\", \"\"], [\"\", \"ngStyle.lt-lg\", \"\"], [\"\", \"ngStyle.lt-xl\", \"\"], [\"\", \"ngStyle.gt-xs\", \"\"], [\"\", \"ngStyle.gt-sm\", \"\"], [\"\", \"ngStyle.gt-md\", \"\"], [\"\", \"ngStyle.gt-lg\", \"\"]],\n  inputs: {\n    ngStyle: \"ngStyle\",\n    \"ngStyle.xs\": \"ngStyle.xs\",\n    \"ngStyle.sm\": \"ngStyle.sm\",\n    \"ngStyle.md\": \"ngStyle.md\",\n    \"ngStyle.lg\": \"ngStyle.lg\",\n    \"ngStyle.xl\": \"ngStyle.xl\",\n    \"ngStyle.lt-sm\": \"ngStyle.lt-sm\",\n    \"ngStyle.lt-md\": \"ngStyle.lt-md\",\n    \"ngStyle.lt-lg\": \"ngStyle.lt-lg\",\n    \"ngStyle.lt-xl\": \"ngStyle.lt-xl\",\n    \"ngStyle.gt-xs\": \"ngStyle.gt-xs\",\n    \"ngStyle.gt-sm\": \"ngStyle.gt-sm\",\n    \"ngStyle.gt-md\": \"ngStyle.gt-md\",\n    \"ngStyle.gt-lg\": \"ngStyle.gt-lg\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultStyleDirective, [{\n    type: Directive,\n    args: [{\n      selector,\n      inputs\n    }]\n  }], null, null);\n})();\n/** Build a styles map from a list of styles, while sanitizing bad values first */\n\n\nfunction buildMapFromList(styles, sanitize) {\n  const sanitizeValue = it => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n\n    return it;\n  };\n\n  return styles.map(stringToKeyValue).filter(entry => !!entry).map(sanitizeValue).reduce(keyValuesToMap, {});\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst ALL_DIRECTIVES = [DefaultShowHideDirective, DefaultClassDirective, DefaultStyleDirective, DefaultImgSrcDirective];\n/**\n * *****************************************************************\n * Define module for the Extended API\n * *****************************************************************\n */\n\nclass ExtendedModule {}\n\nExtendedModule.ɵfac = function ExtendedModule_Factory(t) {\n  return new (t || ExtendedModule)();\n};\n\nExtendedModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ExtendedModule\n});\nExtendedModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CoreModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ExtendedModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CoreModule],\n      declarations: [...ALL_DIRECTIVES],\n      exports: [...ALL_DIRECTIVES]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ClassDirective, DefaultClassDirective, DefaultImgSrcDirective, DefaultShowHideDirective, DefaultStyleDirective, ExtendedModule, ImgSrcDirective, ImgSrcStyleBuilder, ShowHideDirective, ShowHideStyleBuilder, StyleDirective };","map":{"version":3,"names":["i0","Injectable","PLATFORM_ID","Directive","Inject","Input","Optional","Self","SecurityContext","NgModule","i1","StyleBuilder","BaseDirective2","SERVER_TOKEN","LAYOUT_CONFIG","CoreModule","i2","isPlatformServer","NgClass","NgStyle","coerceBooleanProperty","takeUntil","i2$1","ImgSrcStyleBuilder","buildStyles","url","ɵfac","ɵprov","type","args","providedIn","ImgSrcDirective","constructor","elementRef","styleBuilder","styler","marshal","platformId","serverModuleLoaded","DIRECTIVE_KEY","defaultSrc","styleCache","imgSrcCache","init","setValue","nativeElement","getAttribute","setAttribute","src","val","updateWithValue","value","addStyles","ElementRef","StyleUtils","MediaMarshaller","ɵdir","Object","decorators","undefined","Map","inputs$3","selector$3","DefaultImgSrcDirective","arguments","inputs","selector","ClassDirective","iterableDiffers","keyValueDiffers","renderer2","ngClassInstance","klass","ngClass","ngDoCheck","IterableDiffers","KeyValueDiffers","Renderer2","inputs$2","selector$2","DefaultClassDirective","ShowHideStyleBuilder","show","parent","shouldShow","display","isServer","ShowHideDirective","layoutConfig","hasLayout","hasFlexChild","ngAfterViewInit","trackExtraTriggers","children","Array","from","i","length","hasValue","DISPLAY_MAP","has","get","getDisplayStyle","set","defaultValue","getValue","triggerUpdate","ngOnChanges","changes","keys","forEach","key","indexOf","inputKey","split","bp","slice","join","inputValue","currentValue","trackValue","pipe","destroySubject","subscribe","bind","addFlexToParent","lookupStyle","style","setProperty","parentElement","WeakMap","inputs$1","selector$1","DefaultShowHideDirective","NgStyleKeyValue","noQuotes","replace","trim","getType","target","what","Set","buildRawList","source","delimiter","String","map","filter","buildMapFromList$1","styles","sanitize","sanitizeValue","it","stringToKeyValue","entry","reduce","keyValuesToMap","buildMapFromSet","list","push","vals","StyleDirective","sanitizer","differs","ngStyleInstance","serverLoaded","fallbackStyles","buildStyleMap","ngStyle","applyStyleToElement","clearStyles","STYLE","buildMapFromList","DomSanitizer","DefaultStyleDirective","ALL_DIRECTIVES","ExtendedModule","ɵmod","ɵinj","imports","declarations","exports"],"sources":["/home/ins/Universidad/TFG/SGC/TFG/TFG-frontend/node_modules/@angular/flex-layout/fesm2020/angular-flex-layout-extended.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, PLATFORM_ID, Directive, Inject, Input, Optional, Self, SecurityContext, NgModule } from '@angular/core';\nimport * as i1 from '@angular/flex-layout/core';\nimport { StyleBuilder, BaseDirective2, SERVER_TOKEN, LAYOUT_CONFIG, CoreModule } from '@angular/flex-layout/core';\nimport * as i2 from '@angular/common';\nimport { isPlatformServer, NgClass, NgStyle } from '@angular/common';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i2$1 from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ImgSrcStyleBuilder extends StyleBuilder {\n    buildStyles(url) {\n        return { 'content': url ? `url(${url})` : '' };\n    }\n}\nImgSrcStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ImgSrcStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nImgSrcStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ImgSrcStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ImgSrcStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass ImgSrcDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal, platformId, serverModuleLoaded) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.platformId = platformId;\n        this.serverModuleLoaded = serverModuleLoaded;\n        this.DIRECTIVE_KEY = 'img-src';\n        this.defaultSrc = '';\n        this.styleCache = imgSrcCache;\n        this.init();\n        this.setValue(this.nativeElement.getAttribute('src') || '', '');\n        if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n            this.nativeElement.setAttribute('src', '');\n        }\n    }\n    set src(val) {\n        this.defaultSrc = val;\n        this.setValue(this.defaultSrc, '');\n    }\n    /**\n     * Use the [responsively] activated input value to update\n     * the host img src attribute or assign a default `img.src=''`\n     * if the src has not been defined.\n     *\n     * Do nothing to standard `<img src=\"\">` usages, only when responsive\n     * keys are present do we actually call `setAttribute()`\n     */\n    updateWithValue(value) {\n        const url = value || this.defaultSrc;\n        if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n            this.addStyles(url);\n        }\n        else {\n            this.nativeElement.setAttribute('src', url);\n        }\n    }\n}\nImgSrcDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ImgSrcDirective, deps: [{ token: i0.ElementRef }, { token: ImgSrcStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }, { token: PLATFORM_ID }, { token: SERVER_TOKEN }], target: i0.ɵɵFactoryTarget.Directive });\nImgSrcDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: ImgSrcDirective, inputs: { src: \"src\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ImgSrcDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: ImgSrcStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [SERVER_TOKEN]\n                }] }]; }, propDecorators: { src: [{\n                type: Input,\n                args: ['src']\n            }] } });\nconst imgSrcCache = new Map();\nconst inputs$3 = [\n    'src.xs', 'src.sm', 'src.md', 'src.lg', 'src.xl',\n    'src.lt-sm', 'src.lt-md', 'src.lt-lg', 'src.lt-xl',\n    'src.gt-xs', 'src.gt-sm', 'src.gt-md', 'src.gt-lg'\n];\nconst selector$3 = `\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n`;\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\nclass DefaultImgSrcDirective extends ImgSrcDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$3;\n    }\n}\nDefaultImgSrcDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultImgSrcDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultImgSrcDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: DefaultImgSrcDirective, selector: \"\\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\\n\", inputs: { \"src.xs\": \"src.xs\", \"src.sm\": \"src.sm\", \"src.md\": \"src.md\", \"src.lg\": \"src.lg\", \"src.xl\": \"src.xl\", \"src.lt-sm\": \"src.lt-sm\", \"src.lt-md\": \"src.lt-md\", \"src.lt-lg\": \"src.lt-lg\", \"src.lt-xl\": \"src.lt-xl\", \"src.gt-xs\": \"src.gt-xs\", \"src.gt-sm\": \"src.gt-sm\", \"src.gt-md\": \"src.gt-md\", \"src.gt-lg\": \"src.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultImgSrcDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$3, inputs: inputs$3 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ClassDirective extends BaseDirective2 {\n    constructor(elementRef, styler, marshal, iterableDiffers, keyValueDiffers, renderer2, ngClassInstance) {\n        super(elementRef, null, styler, marshal);\n        this.ngClassInstance = ngClassInstance;\n        this.DIRECTIVE_KEY = 'ngClass';\n        if (!this.ngClassInstance) {\n            // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n            // the same host element; since the responsive variations may be defined...\n            this.ngClassInstance = new NgClass(iterableDiffers, keyValueDiffers, elementRef, renderer2);\n        }\n        this.init();\n        this.setValue('', '');\n    }\n    /**\n     * Capture class assignments so we cache the default classes\n     * which are merged with activated styles and used as fallbacks.\n     */\n    set klass(val) {\n        this.ngClassInstance.klass = val;\n        this.setValue(val, '');\n    }\n    updateWithValue(value) {\n        this.ngClassInstance.ngClass = value;\n        this.ngClassInstance.ngDoCheck();\n    }\n    // ******************************************************************\n    // Lifecycle Hooks\n    // ******************************************************************\n    /**\n     * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n     */\n    ngDoCheck() {\n        this.ngClassInstance.ngDoCheck();\n    }\n}\nClassDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ClassDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }, { token: i0.IterableDiffers }, { token: i0.KeyValueDiffers }, { token: i0.Renderer2 }, { token: i2.NgClass, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive });\nClassDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: ClassDirective, inputs: { klass: [\"class\", \"klass\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ClassDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }, { type: i0.IterableDiffers }, { type: i0.KeyValueDiffers }, { type: i0.Renderer2 }, { type: i2.NgClass, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }] }]; }, propDecorators: { klass: [{\n                type: Input,\n                args: ['class']\n            }] } });\nconst inputs$2 = [\n    'ngClass', 'ngClass.xs', 'ngClass.sm', 'ngClass.md', 'ngClass.lg', 'ngClass.xl',\n    'ngClass.lt-sm', 'ngClass.lt-md', 'ngClass.lt-lg', 'ngClass.lt-xl',\n    'ngClass.gt-xs', 'ngClass.gt-sm', 'ngClass.gt-md', 'ngClass.gt-lg'\n];\nconst selector$2 = `\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n`;\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\nclass DefaultClassDirective extends ClassDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$2;\n    }\n}\nDefaultClassDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultClassDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultClassDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: DefaultClassDirective, selector: \"\\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\\n\", inputs: { ngClass: \"ngClass\", \"ngClass.xs\": \"ngClass.xs\", \"ngClass.sm\": \"ngClass.sm\", \"ngClass.md\": \"ngClass.md\", \"ngClass.lg\": \"ngClass.lg\", \"ngClass.xl\": \"ngClass.xl\", \"ngClass.lt-sm\": \"ngClass.lt-sm\", \"ngClass.lt-md\": \"ngClass.lt-md\", \"ngClass.lt-lg\": \"ngClass.lt-lg\", \"ngClass.lt-xl\": \"ngClass.lt-xl\", \"ngClass.gt-xs\": \"ngClass.gt-xs\", \"ngClass.gt-sm\": \"ngClass.gt-sm\", \"ngClass.gt-md\": \"ngClass.gt-md\", \"ngClass.gt-lg\": \"ngClass.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultClassDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$2, inputs: inputs$2 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ShowHideStyleBuilder extends StyleBuilder {\n    buildStyles(show, parent) {\n        const shouldShow = show === 'true';\n        return { 'display': shouldShow ? parent.display || (parent.isServer ? 'initial' : '') : 'none' };\n    }\n}\nShowHideStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ShowHideStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nShowHideStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ShowHideStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ShowHideStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass ShowHideDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal, layoutConfig, platformId, serverModuleLoaded) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.layoutConfig = layoutConfig;\n        this.platformId = platformId;\n        this.serverModuleLoaded = serverModuleLoaded;\n        this.DIRECTIVE_KEY = 'show-hide';\n        /** Original DOM Element CSS display style */\n        this.display = '';\n        this.hasLayout = false;\n        this.hasFlexChild = false;\n    }\n    // *********************************************\n    // Lifecycle Methods\n    // *********************************************\n    ngAfterViewInit() {\n        this.trackExtraTriggers();\n        const children = Array.from(this.nativeElement.children);\n        for (let i = 0; i < children.length; i++) {\n            if (this.marshal.hasValue(children[i], 'flex')) {\n                this.hasFlexChild = true;\n                break;\n            }\n        }\n        if (DISPLAY_MAP.has(this.nativeElement)) {\n            this.display = DISPLAY_MAP.get(this.nativeElement);\n        }\n        else {\n            this.display = this.getDisplayStyle();\n            DISPLAY_MAP.set(this.nativeElement, this.display);\n        }\n        this.init();\n        // set the default to show unless explicitly overridden\n        const defaultValue = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY, '');\n        if (defaultValue === undefined || defaultValue === '') {\n            this.setValue(true, '');\n        }\n        else {\n            this.triggerUpdate();\n        }\n    }\n    /**\n     * On changes to any @Input properties...\n     * Default to use the non-responsive Input value ('fxShow')\n     * Then conditionally override with the mq-activated Input's current value\n     */\n    ngOnChanges(changes) {\n        Object.keys(changes).forEach(key => {\n            if (this.inputs.indexOf(key) !== -1) {\n                const inputKey = key.split('.');\n                const bp = inputKey.slice(1).join('.');\n                const inputValue = changes[key].currentValue;\n                let shouldShow = inputValue !== '' ?\n                    inputValue !== 0 ? coerceBooleanProperty(inputValue) : false\n                    : true;\n                if (inputKey[0] === 'fxHide') {\n                    shouldShow = !shouldShow;\n                }\n                this.setValue(shouldShow, bp);\n            }\n        });\n    }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    /**\n     *  Watch for these extra triggers to update fxShow, fxHide stylings\n     */\n    trackExtraTriggers() {\n        this.hasLayout = this.marshal.hasValue(this.nativeElement, 'layout');\n        ['layout', 'layout-align'].forEach(key => {\n            this.marshal\n                .trackValue(this.nativeElement, key)\n                .pipe(takeUntil(this.destroySubject))\n                .subscribe(this.triggerUpdate.bind(this));\n        });\n    }\n    /**\n     * Override accessor to the current HTMLElement's `display` style\n     * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n     * unless it was already explicitly specified inline or in a CSS stylesheet.\n     */\n    getDisplayStyle() {\n        return (this.hasLayout || (this.hasFlexChild && this.layoutConfig.addFlexToParent)) ?\n            'flex' : this.styler.lookupStyle(this.nativeElement, 'display', true);\n    }\n    /** Validate the visibility value and then update the host's inline display style */\n    updateWithValue(value = true) {\n        if (value === '') {\n            return;\n        }\n        const isServer = isPlatformServer(this.platformId);\n        this.addStyles(value ? 'true' : 'false', { display: this.display, isServer });\n        if (isServer && this.serverModuleLoaded) {\n            this.nativeElement.style.setProperty('display', '');\n        }\n        this.marshal.triggerUpdate(this.parentElement, 'layout-gap');\n    }\n}\nShowHideDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ShowHideDirective, deps: [{ token: i0.ElementRef }, { token: ShowHideStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }, { token: LAYOUT_CONFIG }, { token: PLATFORM_ID }, { token: SERVER_TOKEN }], target: i0.ɵɵFactoryTarget.Directive });\nShowHideDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: ShowHideDirective, usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ShowHideDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: ShowHideStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [LAYOUT_CONFIG]\n                }] }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [SERVER_TOKEN]\n                }] }]; } });\nconst DISPLAY_MAP = new WeakMap();\nconst inputs$1 = [\n    'fxShow', 'fxShow.print',\n    'fxShow.xs', 'fxShow.sm', 'fxShow.md', 'fxShow.lg', 'fxShow.xl',\n    'fxShow.lt-sm', 'fxShow.lt-md', 'fxShow.lt-lg', 'fxShow.lt-xl',\n    'fxShow.gt-xs', 'fxShow.gt-sm', 'fxShow.gt-md', 'fxShow.gt-lg',\n    'fxHide', 'fxHide.print',\n    'fxHide.xs', 'fxHide.sm', 'fxHide.md', 'fxHide.lg', 'fxHide.xl',\n    'fxHide.lt-sm', 'fxHide.lt-md', 'fxHide.lt-lg', 'fxHide.lt-xl',\n    'fxHide.gt-xs', 'fxHide.gt-sm', 'fxHide.gt-md', 'fxHide.gt-lg'\n];\nconst selector$1 = `\n  [fxShow], [fxShow.print],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide], [fxHide.print],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`;\n/**\n * 'show' Layout API directive\n */\nclass DefaultShowHideDirective extends ShowHideDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$1;\n    }\n}\nDefaultShowHideDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultShowHideDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultShowHideDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: DefaultShowHideDirective, selector: \"\\n  [fxShow], [fxShow.print],\\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\\n  [fxHide], [fxHide.print],\\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\\n\", inputs: { fxShow: \"fxShow\", \"fxShow.print\": \"fxShow.print\", \"fxShow.xs\": \"fxShow.xs\", \"fxShow.sm\": \"fxShow.sm\", \"fxShow.md\": \"fxShow.md\", \"fxShow.lg\": \"fxShow.lg\", \"fxShow.xl\": \"fxShow.xl\", \"fxShow.lt-sm\": \"fxShow.lt-sm\", \"fxShow.lt-md\": \"fxShow.lt-md\", \"fxShow.lt-lg\": \"fxShow.lt-lg\", \"fxShow.lt-xl\": \"fxShow.lt-xl\", \"fxShow.gt-xs\": \"fxShow.gt-xs\", \"fxShow.gt-sm\": \"fxShow.gt-sm\", \"fxShow.gt-md\": \"fxShow.gt-md\", \"fxShow.gt-lg\": \"fxShow.gt-lg\", fxHide: \"fxHide\", \"fxHide.print\": \"fxHide.print\", \"fxHide.xs\": \"fxHide.xs\", \"fxHide.sm\": \"fxHide.sm\", \"fxHide.md\": \"fxHide.md\", \"fxHide.lg\": \"fxHide.lg\", \"fxHide.xl\": \"fxHide.xl\", \"fxHide.lt-sm\": \"fxHide.lt-sm\", \"fxHide.lt-md\": \"fxHide.lt-md\", \"fxHide.lt-lg\": \"fxHide.lt-lg\", \"fxHide.lt-xl\": \"fxHide.lt-xl\", \"fxHide.gt-xs\": \"fxHide.gt-xs\", \"fxHide.gt-sm\": \"fxHide.gt-sm\", \"fxHide.gt-md\": \"fxHide.gt-md\", \"fxHide.gt-lg\": \"fxHide.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultShowHideDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$1, inputs: inputs$1 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** NgStyle allowed inputs */\nclass NgStyleKeyValue {\n    constructor(key, value, noQuotes = true) {\n        this.key = key;\n        this.value = value;\n        this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n        this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n        this.value = this.value.replace(/;/, '');\n    }\n}\nfunction getType(target) {\n    let what = typeof target;\n    if (what === 'object') {\n        return (target.constructor === Array) ? 'array' :\n            (target.constructor === Set) ? 'set' : 'object';\n    }\n    return what;\n}\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nfunction buildRawList(source, delimiter = ';') {\n    return String(source)\n        .trim()\n        .split(delimiter)\n        .map((val) => val.trim())\n        .filter(val => val !== '');\n}\n/** Convert array of key:value strings to a iterable map object */\nfunction buildMapFromList$1(styles, sanitize) {\n    const sanitizeValue = (it) => {\n        if (sanitize) {\n            it.value = sanitize(it.value);\n        }\n        return it;\n    };\n    return styles\n        .map(stringToKeyValue)\n        .filter(entry => !!entry)\n        .map(sanitizeValue)\n        .reduce(keyValuesToMap, {});\n}\n/** Convert Set<string> or raw Object to an iterable NgStyleMap */\nfunction buildMapFromSet(source, sanitize) {\n    let list = [];\n    if (getType(source) === 'set') {\n        source.forEach(entry => list.push(entry));\n    }\n    else {\n        Object.keys(source).forEach((key) => {\n            list.push(`${key}:${source[key]}`);\n        });\n    }\n    return buildMapFromList$1(list, sanitize);\n}\n/** Convert 'key:value' -> [key, value] */\nfunction stringToKeyValue(it) {\n    const [key, ...vals] = it.split(':');\n    return new NgStyleKeyValue(key, vals.join(':'));\n}\n/** Convert [ [key,value] ] -> { key : value } */\nfunction keyValuesToMap(map, entry) {\n    if (!!entry.key) {\n        map[entry.key] = entry.value;\n    }\n    return map;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass StyleDirective extends BaseDirective2 {\n    constructor(elementRef, styler, marshal, sanitizer, differs, renderer2, ngStyleInstance, serverLoaded, platformId) {\n        super(elementRef, null, styler, marshal);\n        this.sanitizer = sanitizer;\n        this.ngStyleInstance = ngStyleInstance;\n        this.DIRECTIVE_KEY = 'ngStyle';\n        if (!this.ngStyleInstance) {\n            // Create an instance NgStyle Directive instance only if `ngStyle=\"\"` has NOT been\n            // defined on the same host element; since the responsive variations may be defined...\n            this.ngStyleInstance = new NgStyle(elementRef, differs, renderer2);\n        }\n        this.init();\n        const styles = this.nativeElement.getAttribute('style') ?? '';\n        this.fallbackStyles = this.buildStyleMap(styles);\n        this.isServer = serverLoaded && isPlatformServer(platformId);\n    }\n    /** Add generated styles */\n    updateWithValue(value) {\n        const styles = this.buildStyleMap(value);\n        this.ngStyleInstance.ngStyle = { ...this.fallbackStyles, ...styles };\n        if (this.isServer) {\n            this.applyStyleToElement(styles);\n        }\n        this.ngStyleInstance.ngDoCheck();\n    }\n    /** Remove generated styles */\n    clearStyles() {\n        this.ngStyleInstance.ngStyle = this.fallbackStyles;\n        this.ngStyleInstance.ngDoCheck();\n    }\n    /**\n     * Convert raw strings to ngStyleMap; which is required by ngStyle\n     * NOTE: Raw string key-value pairs MUST be delimited by `;`\n     *       Comma-delimiters are not supported due to complexities of\n     *       possible style values such as `rgba(x,x,x,x)` and others\n     */\n    buildStyleMap(styles) {\n        // Always safe-guard (aka sanitize) style property values\n        const sanitizer = (val) => this.sanitizer.sanitize(SecurityContext.STYLE, val) ?? '';\n        if (styles) {\n            switch (getType(styles)) {\n                case 'string': return buildMapFromList(buildRawList(styles), sanitizer);\n                case 'array': return buildMapFromList(styles, sanitizer);\n                case 'set': return buildMapFromSet(styles, sanitizer);\n                default: return buildMapFromSet(styles, sanitizer);\n            }\n        }\n        return {};\n    }\n    // ******************************************************************\n    // Lifecycle Hooks\n    // ******************************************************************\n    /** For ChangeDetectionStrategy.onPush and ngOnChanges() updates */\n    ngDoCheck() {\n        this.ngStyleInstance.ngDoCheck();\n    }\n}\nStyleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: StyleDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }, { token: i2$1.DomSanitizer }, { token: i0.KeyValueDiffers }, { token: i0.Renderer2 }, { token: i2.NgStyle, optional: true, self: true }, { token: SERVER_TOKEN }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Directive });\nStyleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: StyleDirective, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: StyleDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }, { type: i2$1.DomSanitizer }, { type: i0.KeyValueDiffers }, { type: i0.Renderer2 }, { type: i2.NgStyle, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [SERVER_TOKEN]\n                }] }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; } });\nconst inputs = [\n    'ngStyle',\n    'ngStyle.xs', 'ngStyle.sm', 'ngStyle.md', 'ngStyle.lg', 'ngStyle.xl',\n    'ngStyle.lt-sm', 'ngStyle.lt-md', 'ngStyle.lt-lg', 'ngStyle.lt-xl',\n    'ngStyle.gt-xs', 'ngStyle.gt-sm', 'ngStyle.gt-md', 'ngStyle.gt-lg'\n];\nconst selector = `\n  [ngStyle],\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n`;\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\nclass DefaultStyleDirective extends StyleDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs;\n    }\n}\nDefaultStyleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultStyleDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultStyleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: DefaultStyleDirective, selector: \"\\n  [ngStyle],\\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\\n\", inputs: { ngStyle: \"ngStyle\", \"ngStyle.xs\": \"ngStyle.xs\", \"ngStyle.sm\": \"ngStyle.sm\", \"ngStyle.md\": \"ngStyle.md\", \"ngStyle.lg\": \"ngStyle.lg\", \"ngStyle.xl\": \"ngStyle.xl\", \"ngStyle.lt-sm\": \"ngStyle.lt-sm\", \"ngStyle.lt-md\": \"ngStyle.lt-md\", \"ngStyle.lt-lg\": \"ngStyle.lt-lg\", \"ngStyle.lt-xl\": \"ngStyle.lt-xl\", \"ngStyle.gt-xs\": \"ngStyle.gt-xs\", \"ngStyle.gt-sm\": \"ngStyle.gt-sm\", \"ngStyle.gt-md\": \"ngStyle.gt-md\", \"ngStyle.gt-lg\": \"ngStyle.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DefaultStyleDirective, decorators: [{\n            type: Directive,\n            args: [{ selector, inputs }]\n        }] });\n/** Build a styles map from a list of styles, while sanitizing bad values first */\nfunction buildMapFromList(styles, sanitize) {\n    const sanitizeValue = (it) => {\n        if (sanitize) {\n            it.value = sanitize(it.value);\n        }\n        return it;\n    };\n    return styles\n        .map(stringToKeyValue)\n        .filter(entry => !!entry)\n        .map(sanitizeValue)\n        .reduce(keyValuesToMap, {});\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ALL_DIRECTIVES = [\n    DefaultShowHideDirective,\n    DefaultClassDirective,\n    DefaultStyleDirective,\n    DefaultImgSrcDirective,\n];\n/**\n * *****************************************************************\n * Define module for the Extended API\n * *****************************************************************\n */\nclass ExtendedModule {\n}\nExtendedModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ExtendedModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nExtendedModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: ExtendedModule, declarations: [DefaultShowHideDirective,\n        DefaultClassDirective,\n        DefaultStyleDirective,\n        DefaultImgSrcDirective], imports: [CoreModule], exports: [DefaultShowHideDirective,\n        DefaultClassDirective,\n        DefaultStyleDirective,\n        DefaultImgSrcDirective] });\nExtendedModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ExtendedModule, imports: [CoreModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ExtendedModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CoreModule],\n                    declarations: [...ALL_DIRECTIVES],\n                    exports: [...ALL_DIRECTIVES]\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ClassDirective, DefaultClassDirective, DefaultImgSrcDirective, DefaultShowHideDirective, DefaultStyleDirective, ExtendedModule, ImgSrcDirective, ImgSrcStyleBuilder, ShowHideDirective, ShowHideStyleBuilder, StyleDirective };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}